name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - name: Start virtual display (Xvfb)
        run: Xvfb :1 -screen 0 1600x1200x24 &

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.18.0
        with:
          maven-version: '3.9.6'

      - name: Build with Maven
        run: mvn -B compile --file pom.xml
        env:
          DISPLAY: :1

      - name: Stop Xvfb
        run: killall Xvfb || echo "Xvfb já parado"

  build-hmg:
    runs-on: ubuntu-latest
    needs: build-dev
    environment:
      name: hmg
    steps:
      - name: Start virtual display (Xvfb)
        run: Xvfb :1 -screen 0 1600x1200x24 &

      - name: Checkout repository (clone completo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Garantir .git/config seguro (extra)
        run: git config --add safe.directory "$GITHUB_WORKSPACE"

      - name: Remover shallow flag e garantir fetch completo
        run: |
          if [ -f .git/shallow ]; then
            echo "Removendo .git/shallow..."
            rm .git/shallow
          fi
          git fetch --unshallow || echo "Já era completo"
          git fetch --tags
          git fetch origin +refs/heads/*:refs/remotes/origin/*
          echo "Shallow? $(git rev-parse --is-shallow-repository)"
          echo "Profundidade: $(git rev-list --count HEAD)"

      - name: Validar branch (defensivo)
        run: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo "Branch atual: $BRANCH"
          if [ "$BRANCH" != "main" ]; then
            echo "::warning::Branch atual não é 'main'"
          fi

      - name: Limpar repositório
        run: git clean -fdx

      - name: Limpar cache Sonar (opcional)
        run: rm -rf ~/.sonar/cache || echo "Cache sonar não existe ou não pôde ser removido"

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.18.0
        with:
          maven-version: '3.9.6'

      - name: Cache Sonar packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Final sanity check do repositório
        run: |
          echo "Shallow? $(git rev-parse --is-shallow-repository)"
          test -f .git/shallow && echo ".git/shallow ainda existe" || echo "Clone completo confirmado"
          git status
          git log -3 --oneline

      - name: Build and analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DISPLAY: :1
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=GarraOne_EmprestimoFerramentaCI \
            -Dsonar.scm.enabled=true \
            -Dsonar.scm.provider=git \
            -Dsonar.verbose=true

      - name: Backup temporário do diretório .scannerwork (debug opcional)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: scannerwork-debug
          path: .scannerwork/

      - name: Stop Xvfb
        run: killall Xvfb || echo "Xvfb já parado"

  build-prd:
    runs-on: ubuntu-latest
    needs: build-hmg
    environment:
      name: prd
    steps:
      - name: Start virtual display (Xvfb)
        run: Xvfb :1 -screen 0 1600x1200x24 &

      - name: Checkout repository (clone completo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Garantir .git/config seguro
        run: git config --add safe.directory "$GITHUB_WORKSPACE"

      - name: Verificar profundidade do repositório
        run: |
          echo "Shallow? $(git rev-parse --is-shallow-repository)"
          echo "Profundidade: $(git rev-list --count HEAD)"

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.18.0
        with:
          maven-version: '3.9.6'

      - name: Package project with Maven
        env:
          DISPLAY: :1
        run: mvn -B package --file pom.xml

      - name: Create artifact folder
        run: mkdir staging

      - name: Copy artifacts
        run: cp target/*jar-with-dependencies.jar staging

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging

      - name: Stop Xvfb
        run: killall Xvfb || echo "Xvfb já parado"

